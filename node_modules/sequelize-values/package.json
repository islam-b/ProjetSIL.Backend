{
  "_from": "sequelize-values",
  "_id": "sequelize-values@1.1.0",
  "_inBundle": false,
  "_integrity": "sha1-sdVQYpJ1Sbu/g48gf68CgvPUYdQ=",
  "_location": "/sequelize-values",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sequelize-values",
    "fetchSpec": "latest",
    "name": "sequelize-values",
    "raw": "sequelize-values",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize-values/-/sequelize-values-1.1.0.tgz",
  "_shasum": "b1d55062927549bbbf838f207faf0282f3d461d4",
  "_spec": "sequelize-values",
  "_where": "C:\\Users\\islam\\WebstormProjects\\ProjetSIL",
  "author": {
    "name": "Overlook Motel"
  },
  "bugs": {
    "url": "https://github.com/overlookmotel/sequelize-values/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "lodash": "^4.16.1",
    "semver-select": "^1.1.0"
  },
  "deprecated": false,
  "description": "Easily get raw data from Sequelize instances",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "coveralls": "^2.11.14",
    "istanbul": "^0.4.5",
    "jshint": "^2.9.3",
    "mocha": "^3.0.2",
    "mysql": "~2.10.1",
    "mysql2": "^1.0.0",
    "pg": "^6.0.4",
    "pg-hstore": "^2.3.1",
    "pg-native": "^1.8.0",
    "sequelize": "4.0.0-2",
    "sqlite3": "^3.1.4",
    "tedious": "^1.13.2"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "https://github.com/overlookmotel/sequelize-values#readme",
  "keywords": [
    "dedup",
    "deep",
    "duplicate",
    "duplicates",
    "get",
    "nested",
    "plain",
    "raw",
    "recurse",
    "recursive",
    "redundant",
    "sequelize",
    "sequelize-plugin",
    "values"
  ],
  "license": "MIT",
  "main": "./lib/",
  "name": "sequelize-values",
  "optionalDependencies": {},
  "readme": "# sequelize-values.js\n\n# Easily get raw data from Sequelize instances\n\n[![NPM version](https://img.shields.io/npm/v/sequelize-values.svg)](https://www.npmjs.com/package/sequelize-values)\n[![Build Status](https://img.shields.io/travis/overlookmotel/sequelize-values/master.svg)](http://travis-ci.org/overlookmotel/sequelize-values)\n[![Dependency Status](https://img.shields.io/david/overlookmotel/sequelize-values.svg)](https://david-dm.org/overlookmotel/sequelize-values)\n[![Dev dependency Status](https://img.shields.io/david/dev/overlookmotel/sequelize-values.svg)](https://david-dm.org/overlookmotel/sequelize-values)\n[![Coverage Status](https://img.shields.io/coveralls/overlookmotel/sequelize-values/master.svg)](https://coveralls.io/r/overlookmotel/sequelize-values)\n\n## What it does\n\nA few utility functions for getting raw data from Sequelize instances. Includes ability to remove duplicate data.\n\n## Current status\n\nRequires Sequelize v2.x.x, v3.x.x or v4.x.x.\n\nVersion v1.0.0 onwards supports only Node v4 or higher. Currently, all tests pass on Node v0.10 and v0.12, but these versions of Node will no longer be tested against so this cannot be guaranteed in future releases.\n\n## Usage\n\n### Loading module\n\nTo load module:\n\n```js\nvar Sequelize = require('sequelize-values')();\n// NB Sequelize must also be present in `node_modules`\n```\n\nor, a more verbose form useful if chaining multiple Sequelize plugins:\n\n```js\nvar Sequelize = require('sequelize');\nrequire('sequelize-values')(Sequelize);\n```\n\n### Methods\n\n#### Instance#getValues()\n\nLike Sequelize's native `Instance#values`, except that it recursively calls `getValues()` on any nested values. So if you get an instance from `Model#find()` with eager-loaded associations, the associated Instances returned are also converted to values.\n\n```js\nTask.find( { include: [ User ] } )\n.then(function(task) {\n\treturn task.getValues();\n\t// returns the attributes of the Task,\n\t// with the attributes of the User also converted to values rather than a DAO.\n});\n```\n\n#### Sequelize.getValues(input)\n\nSame as `Instance#getValues()` except can be called with an `Instance` or array of `Instance`s.\n\n```js\nTask.findAll( { include: [ User ] } )\n.then(function(tasks) {\n\treturn Sequelize.getValues(tasks);\n\t// returns the array of Tasks, with each Task converted to plain attributes,\n\t// with the attributes of the Users also converted to values rather than DAOs.\n});\n```\n\n#### Instance#getValuesDedup()\n\nSame as `Instance#getValues()`, except removes redundant duplicated data, e.g. removes `id` fields which are repeated twice.\n\nUseful if you want to e.g. send the values of an Model Instance to the browser without sending unnecessary duplicated data.\n\nExamples:\n\n##### belongsTo association\n\n```js\n// .getValues() - UserId is repeated as UserId and user.id\n{ name: 'A task', UserId: 1, User: { id: 1, name: 'A user' } }\n// .getValuesDedup() - UserId is removed\n{ name: 'A task', User: { id: 1, name: 'A user' } }\n```\n\n##### hasMany association\n\n```js\n// .getValues() - UserId is repeated as id and Tasks[].UserId\n{ id: 1, name: 'A user', Tasks: [ { UserId: 1, name: 'A task' } ] }\n// .getValuesDedup() - Tasks[].UserId is removed\n{ id: 1, name: 'A user', Tasks: [ { name: 'A task' } ] }\n```\n\n##### belongsToMany association\n\n```js\n// .getValues()\n//   - UserId is repeated as id and Tasks[].UserTask.UserId\n//   - TaskId is repeated as Tasks[].id and Tasks[].UserTask.TaskId\n{ id: 1, name: 'A user', Tasks: [ { id: 2, name: 'A task', UserTask: { UserId: 1, TaskId: 2 } } ] }\n// .getValuesDedup() - Tasks[].UserTask is removed\n{ id: 1, name: 'A user', Tasks: [ { id: 2, name: 'A task' } ] }\n```\n\n#### Sequelize.getValuesDedup(input)\n\nSame as `Sequelize.getValues(input)`, but with data de-duplication as per `Instance#getValuesDedup()`.\n\n## Tests\n\nUse `npm test` to run the tests. Use `npm run cover` to check coverage.\nRequires a database called 'sequelize_test' and a db user 'sequelize_test' with no password.\n\n## Changelog\n\nSee [changelog.md](https://github.com/overlookmotel/sequelize-values/blob/master/changelog.md)\n\n## Issues\n\nIf you discover a bug, please raise an issue on Github. https://github.com/overlookmotel/sequelize-values/issues\n\n## Contribution\n\nPull requests are very welcome. Please:\n\n* ensure all tests pass before submitting PR\n* add an entry to changelog\n* add tests for new features\n* document new functionality/API additions in README\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/overlookmotel/sequelize-values.git"
  },
  "scripts": {
    "cover": "npm run cover-main && rm -rf coverage",
    "cover-main": "COVERAGE=true istanbul cover _mocha --report lcovonly -- -t 30000 -R spec 'test/**/*.test.js'",
    "coveralls": "npm run cover-main && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "jshint": "jshint lib test",
    "test": "npm run jshint && npm run test-main",
    "test-main": "mocha --check-leaks --colors -t 30000 -R spec 'test/**/*.test.js'",
    "test-mssql": "DIALECT=mssql npm run test-main",
    "test-mysql": "DIALECT=mysql npm run test-main",
    "test-postgres": "DIALECT=postgres npm run test-main",
    "test-postgres-native": "DIALECT=postgres-native npm run test-main",
    "test-sqlite": "DIALECT=sqlite npm run test-main",
    "travis": "if [ $COVERAGE ]; then npm run coveralls; else npm test; fi"
  },
  "version": "1.1.0"
}
